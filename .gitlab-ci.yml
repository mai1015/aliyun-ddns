image: golang:1.12-buster

variables:
    DOCKER_IMAGE: registry.furry.top/${CI_PROJECT_PATH}
    GOFLAGS: -mod=readonly
    GOPATH: ${CI_PROJECT_DIR}/vendor/go
    GO111MODULE: "on"
    GOPROXY: https://goproxy.io

stages:
    - dependencies
    - build
    - packaging

.modcache: &modcache
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - vendor/go/pkg/mod/

dependencies:
    stage: dependencies
    script:
        - go mod download
    cache: *modcache

build:
    stage: build
    cache:
        <<: *modcache
        policy: pull
    artifacts:
        paths: ["build/"]
        expire_in: 1 day
    script:
        - export CI_BUILD_DATE=$(date +%FT%T%z)
        - GO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -ldflags "-X main.version=${CI_COMMIT_REF_NAME} -X main.commitHash=${CI_COMMIT_SHA} -X main.buildDate=${CI_BUILD_DATE}" -o build/main main/*.go

docker:
    image: docker:stable
    stage: packaging
    tags:
        - docker
    variables:
        DOCKER_DRIVER: overlay2
    services:
        - docker:dind
    before_script:
        - docker info
        - apk add --update --no-cache ca-certificates make
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.furry.top
    script:
        - docker build -t ${DOCKER_IMAGE}:${CI_COMMIT_REF_NAME} .
        - if [[ "${CI_COMMIT_REF_NAME}" == "${CI_COMMIT_TAG}" ]]; then docker tag ${DOCKER_IMAGE}:${CI_COMMIT_REF_NAME} ${DOCKER_IMAGE}:latest; fi
        - docker push ${DOCKER_IMAGE}
